Contexo 0.9.0
Note about building old Contexo projects:
This release removes the preprocessor definition COMPILING_MOD_<MODNAME> for each module which caused very long preprocessor define strings. It was reported that too long preprocessor define strings would cause trouble in Visual Studio.
These are now removed, and thus to build very old projects the following flag must be added to the build process:
--legacy-compiling-mod

New features:
* Contexo modules are no longer depending on a certain directory structure.
Now, any folder which is located in a folder defined by a ctx-path which contains source or header files are treated as Contexo modules.
* Subversion username and password can now be supplied from environment variables (USERNAME, PASSWORD)
* A GNU Makefile export plugin has been produced. This gives the  possibility to build in parallell and tweak compile flags on gnu-make compatible systems.
* A NetBeans export plugin. This has not undergone serious testing and may not be stable for daily use.

Bugfixes:
* --tolerate-missing-headers has been set as default when building, to get the old behaviour where contexo would stop when encountering a header the flag --fail-on-missing-headers must be supplied to contexo.
* sln export bugfix.
* obsolete code has been removed.
* minor cleanups/fixes as determined by static python analysis (pylint).

Contexo 0.8.0
Bugfixes:
- Fixes for the MSVC plugin:
  - local dependency includes for each module instead of global includes for all modules
  - digests compilation flags which eliminates warnings with overriding flags. Lots of flags added.
  - adding additional libraries for msvc has been fixed
  - Debug is no longer hardcoded to be enabled. This could in some configurations cause CL to not compile due to compile flag incompatibility. If Debugging is wanted, debugging must be explicitly stated in the .bc file.
- disable rebuild if the project has external dependencies
- Warning if %HOMEPATH% is set to something else than '\' on windows since contexo will fail to detect correct home directory in that case.
- Correctly escapes arguments to AR in windows since the windows paths with backslashes otherwise would be supplied as control characters.
- Fixed creation of .sln files.
- .gitattributes added which is needed for MSysGIT in windows.
- Removed/commented unused imports and code
- there is now a 'ctx' command without the .py suffix for unix users
- fixed typo in gcc cdefs which should remove warnings about LDDIRSPREFIX.

New features:
- ARCH_PATH in .bc, adds a path relative to [CONTEXOMOD]/src where source files of type C, C++, and Assembler may be added. This was created so architecture specific files could be added and override cross-platform files.
To support assembler-compilation, the flags ASMCOM, ASM are added to .cdef and ASMFLAGS is added to .bc, these flags will default to the C equivalent if not present.
- An example view with a classic hello world can be found under the examples/ directory. Example use of ARCH_PATH and contexo may be found here.
- Parallell builds enabled with the /MP flag when building with Visual Studio CL.EXE (msvc 2005 and later).



Contexo 0.7.4
-made the dependency manager aware of include dirs added throug the -I flag
-fixed a bug in setup (can't find cdefs/bconf)
-made freeze skip fs-repos (i.e. non revision controlled)
-changes to andkmk.py:
 -Support for creating the shared object from multiple comp-file-library-entries.
 -Support for configuring the project location.
 -Support for renaming drives in the makefiles.

Contexo 0.7.3
-fixed str-unicode (fatal) incompatibility in areURLsEqual 
-added headers from test folders into generated msvc projects
-additional libraries in msvc are now named only by their basenames
-made low verbosity more silent
-imporved os-compatibility of paths passed to the tools (ar, ld, cc)
-corrected python2.5 compatibility (syntax error when using 'as' in 'except err as foo') 
-updated android make generator andkmk

Contexo 0.7.2
-added cdefs and bdefs for osx (because the 'ar' tool does not accept the '@optionfile' option)
Bugfixes:
-treat spaces in URLs more consequently (even for rspec import)
-correct treatment for additional include paths in msvc plugin
-corrected names of default directories (cdefs, bdefs to cdef, bdef) that are copied during installation
-improved error handling when svn versions are not correct
-imporved error handling when trying to work on a view that is not updated


Contexo 0.7.1
-fixed a fatal bug in buildmod


Contexo 0.7.0
-new plugin: android ndk makefile generation
-new tool: bdef2rspec.py (translating the xml from bdef to rspec - no need for valid view)
-fixed bug in freeze

﻿
Contexo 0.6.99
new features/fixes:
-new command: build
    -Can be used in place of  buildmod and buildcomp (kept for backwards compatibility)
    -Can link executables (options: -exe, -I -L -l)
    -Can export all headers (--all-headers)
-new command: freeze – to freeze the revision numbers
-New option: --tolerate-missing-headers
-inform what source file the missing header is included from.
-source files (not headers) can have doubled names in a view now
-changed config structure: CONFIG_DIR in config, CONTEXO_HOME_DIR, CONTEXO_CONFIG_DIR to find config.
-msvc plugin: export tests as well
-msvc plugin: additional includes can be a directory name (if having only one)
-msvc plugin: support for exe type projects
-msvc plugin: workaround for VS flawed handling of additional options (compiler flags).
-new plugin (tengilplugin): find and export invocations of given names from the source files (used for automatic discovery of tests)
-can export headers from modules that have no source files.

Some known limitations/bugs:
-local includes does not have precedence over external includes: make sure your names are unique.
-verbosity cannot be set from the command line
-cdef and bc-files are found if placed in the view root, env- files are found in the same directory as the command is called upon
-in order to build from deep within a view, use –view and point out the root view directory. e.g. --view ../../..  (not very elegant + doesnt work with env files in the view root – see above )
-hierarchical rspecs need a live network connection.
-clean does not work on comp-files. To make sure all is rebuild, use the --force / -f flag
-After first installation, on windows, sometimes in order to get the paths to the scripts set up, you need to open the 'environment variables'  window from control panel->system and then close it. You dont need to add any paths, as they are already added, but windows sometimes doesn't acknowledge them fully.

